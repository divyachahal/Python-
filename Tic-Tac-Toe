# Tic-Tac-Toe

# Global variables
board = [' '] * 9
current_player = 'X'
game_over = False

# Function to display the board
def display_board():
    print('-------------')
    print('|', board[0], '|', board[1], '|', board[2], '|')
    print('-------------')
    print('|', board[3], '|', board[4], '|', board[5], '|')
    print('-------------')
    print('|', board[6], '|', board[7], '|', board[8], '|')
    print('-------------')

# Function to handle a player's turn
def handle_turn():
    global current_player
    position = input("Enter a position from 1-9: ")

    while not position.isdigit() or int(position) not in range(1, 10) or board[int(position) - 1] != ' ':
        print("Invalid input. Please try again.")
        position = input("Enter a position from 1-9: ")

    position = int(position) - 1
    board[position] = current_player
    display_board()

# Function to check if the game is over
def check_game_over():
    global game_over
    # Check rows
    for i in range(0, 9, 3):
        if board[i] == board[i+1] == board[i+2] != ' ':
            game_over = True
            return
    # Check columns
    for i in range(3):
        if board[i] == board[i+3] == board[i+6] != ' ':
            game_over = True
            return
    # Check diagonals
    if board[0] == board[4] == board[8] != ' ' or board[2] == board[4] == board[6] != ' ':
        game_over = True
        return
    # Check if the board is full
    if ' ' not in board:
        game_over = True

# Function to switch the player
def switch_player():
    global current_player
    if current_player == 'X':
        current_player = 'O'
    else:
        current_player = 'X'

# Function to play the game
def play_game():
    display_board()

    while not game_over:
        handle_turn()
        check_game_over()
        switch_player()

    if ' ' not in board:
        print("It's a tie!")
    else:
        print("Player", current_player, "wins!")

# Start the game
play_game()


/* In this code, the board list represents the tic-tac-toe board, where each position is initially set to a space character. The current_player variable keeps track of whose turn it is, and the game_over variable is set to True when the game ends.

The display_board() function displays the current state of the board. The handle_turn() function handles a player's turn by prompting them to enter a position and updating the board accordingly. It also checks for valid input and ensures that the chosen position is not already occupied.

The check_game_over() function checks if the game is over by examining the board state. It checks rows, columns, and diagonals to see if any player has won or if the board is full.

The switch_player() function switches the current player after each turn.

Finally, the play_game() function starts the game by calling the necessary functions in a loop until the game is over. It also prints the winner or declares a tie at the end.

You can run this code in a Python environment, and you'll be able to play tic-tac-toe against another player.*/
